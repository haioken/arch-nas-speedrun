# Jellyfin HTTPS reverse proxy
server {
    listen 80;
    listen 443 ssl;
    server_name         tv.mydomain.tld;
    http2               on;
    ssl_certificate     /etc/letsencrypt/live/mydomain.tld/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mydomain.tld/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;
    add_header          X-Content-Type-Options "nosniff";

    location / {


        proxy_pass                  http://localhost:8096;
        proxy_set_header            Host $host;
        proxy_set_header            X-Real-IP $remote_addr;
        proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header            X-Forwarded-Proto $scheme;
        proxy_http_version          1.1;
        proxy_set_header            Upgrade $http_upgrade;
        proxy_set_header            Connection $http_connection;
        proxy_max_temp_file_size    16384m;
        proxy_buffering             off;
        client_max_body_size        0;
    }

    location /socket {
        proxy_pass                  http://localhost:8096;
        proxy_set_header            Host $host;
        proxy_set_header            X-Real-IP $remote_addr;
        proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header            X-Forwarded-Proto $scheme;
        proxy_http_version          1.1;
        proxy_set_header            Upgrade $http_upgrade;
        proxy_set_header            Connection "upgrade";
        proxy_set_header            X-Forwarded-Protocol $scheme;
        proxy_set_header            X-Forwarded-Host $http_host;
    }
}